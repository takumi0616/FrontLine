以下のプログラムを確認してからタスクを実行してください
@/src/FrontLine/main_v4.py
@/src/FrontLine/swin_unet.py
@/src/FrontLine/main_v4/__init__.py
@/src/FrontLine/main_v4/main_v4_config.py
@/src/FrontLine/main_v4/main_v4_datasets.py
@/src/FrontLine/main_v4/main_v4_models.py
@/src/FrontLine/main_v4/main_v4_stage1_5.py
@/src/FrontLine/main_v4/main_v4_stage1.py
@/src/FrontLine/main_v4/main_v4_stage2_5.py
@/src/FrontLine/main_v4/main_v4_stage2.py
@/src/FrontLine/main_v4/main_v4_stage3_5.py
@/src/FrontLine/main_v4/main_v4_stage3.py
@/src/FrontLine/main_v4/main_v4_stage4_5.py
@/src/FrontLine/main_v4/main_v4_stage4.py
@/src/FrontLine/main_v4/main_v4_visualize.py

現状の処理の大まかな流れは以下だと認識していますが、それも確認してください
```
私の提案

前線のデータは6クラス（前線なし=0, 温暖前線=1, 寒冷前線=2, 停滞前線=3, 閉塞前線=4, 温暖前線と寒冷前線の繋ぎ目=5）

私が現在考えている実装として、まずstage1のswin-unetで前線のデータ6クラス全てのの予測を行って欲しいです
stage1の学習では、学習期間の正解の前線6クラス、および気象変数データ（31ch×前日、当日、翌日=93ch）を用いて学習
stage1の予測では、予測期間の気象変数データを用いて予測する感じです
結果、前線6クラスの予測データが得られるので、温暖前線と寒冷前線の繋ぎ目=5と前線なし=0はそのままで、温暖前線=1, 寒冷前線=2, 停滞前線=3, 閉塞前線=4の4つを前線なし=0に変更したデータのncファイルが保存されるようにしてください（./v4_result/stage1_nc）

次にstage1_5ですが、./v4_result/stage1_ncをまず読み込んでください
この温暖前線と寒冷前線の繋ぎ目=5ですが、2×2の4マスの塊だったり3×3の9マスほどの塊のような（もしくはほぼこのサイズ）形をしています
あまりに大きい塊だったり、形が歪なものは中心部分で縮小、また少ない塊の単体で散らばっているものは削除する論理処理をstage1.5として入れます
結果を./v4_result/stage1_5_ncとして保存します（./v4_result/stage1_5_ncでは、範囲の格子状にて温暖前線と寒冷前線の繋ぎ目=5と前線なし=0の2値のデータになっています）

次にstage2において温暖前線と寒冷前線の予測を行います
stage2の学習では、学習期間の正解の温暖前線=1, 寒冷前線=2、正解の温暖前線と寒冷前線の繋ぎ目=5、および気象変数データを用いて学習します
stage2の予測では、./v4_result/stage1_5_ncのデータと、気象変数データを用いて予測する感じです（./v4_result/stage1_5_ncにおいて温暖前線と寒冷前線の繋ぎ目=5は固定なので、温暖前線=1, 寒冷前線=2に上書きされることはありません）
結果を　./v4_result/stage2_ncとして保存して下さい（ここには./v4_result/stage1_5_ncにおいて温暖前線と寒冷前線の繋ぎ目=5のデータと、予測された温暖前線=1, 寒冷前線=2のデータおよび、前線なし=0の4値のデータになっているはずです）

次にstage2_5ですが、まず./v4_result/stage2_ncを読み込んでください
その次にstage2.5の論理処理として、stage2で予測された温暖前線=1, 寒冷前線=2に着目してください
stage2で予測された温暖前線=1, 寒冷前線=2において、温暖前線と寒冷前線の繋ぎ目=5と繋がっているもの（繋ぎ目から前線ありのマスを通って繋がっていること）のみを残す処理をします
温暖前線と寒冷前線の繋ぎ目=5は、温暖前線=1, 寒冷前線=2どちらとも繋がっている必要があります
ここで、温暖前線=1のみ温暖前線と寒冷前線の繋ぎ目=5と繋がっているもの、寒冷前線=2のみ温暖前線と寒冷前線の繋ぎ目=5と繋がっているものは削除して下しあ
次に、温暖前線と寒冷前線の繋ぎ目=5に着目してください、温暖前線=1, 寒冷前線=2の両方と繋がっていないものは削除してください
この結果を結果を./v4_result/stage2_5_ncとして保存して下さい（温暖前線と寒冷前線の繋ぎ目=5、温暖前線=1, 寒冷前線=2のデータおよび、前線なし=0の4値のデータになっているはずです）

stage3では閉塞前線を予測します
stage3の学習では、学習期間の正解の温暖前線=1, 寒冷前線=2、閉塞前線=4、正解の温暖前線と寒冷前線の繋ぎ目=5、および気象変数データを用いて学習します
stage3の予測では、./v4_result/stage2_5_ncのデータと、気象変数データを用いて閉塞前線=4を予測します
結果は./v4_result/stage3_ncとして保存して下さい（ここには./v4_result/stage2_5_ncにおいて温暖前線と寒冷前線の繋ぎ目=5と、温暖前線=1, 寒冷前線=2のデータおよび予測した閉塞前線=4、前線なし=0の5値のデータになっているはずです）

次にstage3_5ですが、まず./v4_result/stage3_ncを読み込んでください
閉塞前線=4は温暖前線=1と寒冷前線=2の繋ぎ目あたり、もしくは温暖前線と寒冷前線の繋ぎ目=5から発生している必要があるので、stage3.5では温暖、寒冷、繋ぎ目のどれかにくっついている塊の閉塞前線=4以外は削除するようにしてください
結果は./v4_result/stage3_ncとして保存して下さい（温暖前線と寒冷前線の繋ぎ目=5と、温暖前線=1, 寒冷前線=2、閉塞前線=4、前線なし=0の5値のデータになっているはずです）

stage4では停滞前線を予測してください
stage4の学習では、学習期間の正解の温暖前線=1, 寒冷前線=2、停滞前線=3、閉塞前線=4、正解の温暖前線と寒冷前線の繋ぎ目=5、および気象変数データを用いて学習
stage4の予測では、./v4_result/stage3_5_ncのデータと、気象変数データを用いて停滞前線=3を予測する感じです
結果は./v4_result/stage4_ncとして保存して下さい（ここには./v4_result/stage3_5_ncにおいての温暖前線と寒冷前線の繋ぎ目=5と、温暖前線=1, 寒冷前線=2、閉塞前線=4のデータおよび予測した停滞前線=3、前線なし=0の5値のデータになっているはずです）

stege4.5では、./v4_result/stage4_ncをまず読み込んでください
停滞前線=3はそこそこ大きな前線なので、小さな塊ぐらいの停滞前線は削除するようにしてください（面積25以下の塊や単体の削除）
また、もし寒冷前線ピクセルに停滞前線がくっついた場合（隣接しており、辿れるもの）は寒冷前線に変更してください
結果を./v4_result/stage4_5_ncとして保存して下さい（前線クラスすべてのの6値のデータになっているはずです）

上記の各ステージでは、前のステージの結果を入力とするようにしてください
stage1、2、3、4ごとにそれぞれのstageの目的に合うようにswin-unetを学習するようにしてください
```

解説して欲しい箇所があります
それぞれのstage*_5における論理処理では、前線に対してどのような処理が具体的に行われているのか（どんなものが除去されてどんなものが残るのか）
日本語で解説

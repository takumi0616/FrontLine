src/FrontLine/main_v3/__init__.py
src/FrontLine/main_v3/main_v3_config.py
src/FrontLine/main_v3/main_v3_datasets.py
src/FrontLine/main_v3/main_v3_evaluation.py
src/FrontLine/main_v3/main_v3_models.py
src/FrontLine/main_v3/main_v3_shap.py
src/FrontLine/main_v3/main_v3_stage1.py
src/FrontLine/main_v3/main_v3_stage2_diffusion.py
src/FrontLine/main_v3/main_v3_stage2_swin.py
src/FrontLine/main_v3/main_v3_stage3.py
src/FrontLine/main_v3/main_v3_stage4_svg.py
src/FrontLine/main_v3/main_v3_utils.py
src/FrontLine/main_v3/main_v3_visualize.py
src/FrontLine/main_v3.py

上記のプログラムを全て読んでください
私は現在前線の予測モデルの開発を行なっているのですが、予測において問題があります

それは削れたり膨れたり線ぽくなかったりと、前線を1種予測に出すならば滑らかな一本の線で書いて欲しいのに汚い前線ばかり出るということです
原因はピクセル単位の予測を行っているからだというのはわかっていますし、stage2において、歪な前線を人工データで作成して修正用のモデルにするという工程も行っていますが効果が限定的です

この前線としてルールを守っていないものを出力するというのは致命的な問題です
ルールはいろいろあるのですが、
なので、前線データにおいて固まった前線の種類を扱って、予測をする時はかたまりの前線を1個として予測するような感じにしたいです
stage1とか2とか3にわけると問題点がそれぞれで発生して結局うまくいきません
また、以下のようなルールも適切に導入したいです

```
	温暖単体なら描かない
　	052512
	寒冷単体で出てて低気圧中心から遠いものは描かない
　	120518　082000　051500
　	051700(これは地形性か)
	低気圧中心があり、温暖がしっかり出ていれば、寒冷側が緑混じりでも寒冷として引く。
　	121100　121906
	低気圧中心や黄色よりも寒冷側に温暖が生えてる場合は寒冷とする
　	121512
	寒冷の後ろの短い停滞は、すべて寒冷に
	　121918　041506　101018
	　042700(これは省略してるけど伸ばしてもいい)
　	043000(気象庁は停滞だけど寒冷でも可)
	停滞の先に寒冷だけいる場合、すべて停滞に。
	　090118
	停滞に一部寒冷だけ混ざる場合、黄色や赤がいなければ停滞に
　	050200　050600　
	停滞の中の小さい赤青は、すべて停滞に。
　	061918
```

予測はswin-unetで行いますが、ピクセル単位ではなく、塊を予測する（その際に長さや滑らかさ、曲率なども予測できるとよい）という感じにしたいのですが、日本語で実装について提案してください
画期的な方法でルール通りの前線が予測できることが大事です